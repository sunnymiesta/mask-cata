add_definitions(-DSTATICLIB)

file(GLOB_RECURSE blockchain_explorer blockchain_explorer/*)
file(GLOB_RECURSE common common/*)
file(GLOB_RECURSE crypto crypto/*)
file(GLOB_RECURSE core core/*)
file(GLOB_RECURSE seria seria/*)
file(GLOB_RECURSE base base/* CryptoNoteConfig.h)
file(GLOB_RECURSE protocol protocol/*)
file(GLOB_RECURSE daemon daemon/*)
file(GLOB_RECURSE deluxe deluxe/*)
file(GLOB_RECURSE http http/*)
file(GLOB_RECURSE procnode procnode/*)
file(GLOB_RECURSE log log/*)
file(GLOB_RECURSE node_rpc_proxy node_rpc_proxy/*)
file(GLOB_RECURSE p2p p2p/*)
file(GLOB_RECURSE rpc rpc/*)
file(GLOB_RECURSE Serialization Serialization/*)
file(GLOB_RECURSE simple_wallet simple_wallet/*)

if(MSVC)
  file(GLOB_RECURSE System System/* Platform/Windows/System/*)
elseif(APPLE)
  file(GLOB_RECURSE System System/* Platform/OSX/System/*)
else()
  file(GLOB_RECURSE System System/* Platform/Linux/System/*)
endif()

file(GLOB_RECURSE transfers transfers/*)
file(GLOB_RECURSE wallet wallet/*)
file(GLOB_RECURSE wallet_legacy wallet_legacy/*)

file(GLOB_RECURSE json json/*)

file(GLOB_RECURSE payment_gate payment_gate/*)
file(GLOB_RECURSE payment_gate_services payment_gate_services/*)
file(GLOB_RECURSE miner miner/*)

source_group("" FILES $${common} ${crypto} ${base} ${core} ${seria} ${protocol} ${daemon} ${deluxe} ${json} ${http} ${log} ${node_rpc_proxy} ${p2p} ${rpc} ${Serialization} ${simple_wallet} ${System} ${transfers} ${wallet} ${wallet_legacy})

add_library(blockchain_explorer ${blockchain_explorer})
add_library(common ${common})
add_library(crypto ${crypto})
add_library(base ${base} ${core} ${seria})
add_library(http ${http})
add_library(procnode ${procnode})
add_library(log ${log})
add_library(node_rpc_proxy ${node_rpc_proxy})
add_library(rpc ${rpc})
add_library(p2p ${protocol} ${p2p})
add_library(Serialization ${Serialization})
add_library(System ${System})
add_library(transfers ${transfers})
add_library(wallet ${wallet} ${wallet_legacy})
add_library(payment_gate ${payment_gate})
add_library(json ${json})

add_executable(daemon ${daemon})
add_executable(deluxe ${deluxe})
add_executable(simple_wallet ${simple_wallet})
add_executable(payment_gate_services ${payment_gate_services})
add_executable(miner ${miner})

if (MSVC)
  target_link_libraries(System ws2_32)
endif ()

target_link_libraries(daemon base p2p rpc System http log common crypto upnpc-static blockchain_explorer ${Boost_LIBRARIES} Serialization)
target_link_libraries(deluxe base p2p rpc System http log common crypto upnpc-static blockchain_explorer ${Boost_LIBRARIES} Serialization)
target_link_libraries(simple_wallet wallet node_rpc_proxy transfers rpc http base System log common crypto ${Boost_LIBRARIES} Serialization)
target_link_libraries(payment_gate_services payment_gate json wallet node_rpc_proxy transfers base crypto p2p rpc http System log common procnode upnpc-static blockchain_explorer ${Boost_LIBRARIES} Serialization)
target_link_libraries(miner base rpc System http log common crypto ${Boost_LIBRARIES} Serialization)

add_dependencies(rpc version)

add_dependencies(deluxe version)
add_dependencies(daemon version)
add_dependencies(simple_wallet version)
add_dependencies(payment_gate_services version)
add_dependencies(p2p version)

set_property(TARGET simple_wallet PROPERTY OUTPUT_NAME "catalyst_wallet")
set_property(TARGET payment_gate_services PROPERTY OUTPUT_NAME "walletd")
set_property(TARGET miner PROPERTY OUTPUT_NAME "miner")
set_property(TARGET daemon PROPERTY OUTPUT_NAME "catalystd")
set_property(TARGET deluxe PROPERTY OUTPUT_NAME "masternode")
